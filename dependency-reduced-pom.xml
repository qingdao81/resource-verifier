<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.qingdao81</groupId>
  <artifactId>resource-verifier</artifactId>
  <name>Test resource verifier</name>
  <version>0.0.1-SNAPSHOT</version>
  <description>Resource verifiers to check if a dependency service in a test is up and running.</description>
  <prerequisites>
    <maven>3.0.0</maven>
  </prerequisites>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <transformers>
            <transformer>
              <mainClass>com.qingdao81.testresourceverifier.cli.CLIResourceVerifierApp</mainClass>
            </transformer>
          </transformers>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <resources>
          <resource>
            <targetPath>${docker.build.target}</targetPath>
            <filtering>true</filtering>
            <directory>${docker.build.src}</directory>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>build-docker-image</id>
                <phase>install</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <exec>
                      <arg />
                    </exec>
                    <exec>
                      <arg />
                    </exec>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <docker.image>qingdao81/${project.artifactId}:${project.version}</docker.image>
        <docker.build.target>docker</docker.build.target>
        <docker.build.src>src/main/resources/docker</docker.build.src>
      </properties>
    </profile>
    <profile>
      <id>integration-test</id>
      <build>
        <testResources>
          <testResource>
            <filtering>true</filtering>
            <directory>/Users/lbachmann/git/resource-verifier/src/test/resources</directory>
          </testResource>
          <testResource>
            <targetPath>integration/docker</targetPath>
            <filtering>true</filtering>
            <directory>/Users/lbachmann/git/resource-verifier/src/test/resources/integration/docker</directory>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.20</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
            <executions>
              <execution>
                <id>setup-docker</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <exec>
                      <arg />
                    </exec>
                    <exec>
                      <arg />
                    </exec>
                    <exec>
                      <arg />
                    </exec>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>teardown-docker</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <exec>
                      <arg />
                    </exec>
                    <exec>
                      <arg />
                    </exec>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <docker-compose.file>${docker.dir}/docker-compose.yml</docker-compose.file>
        <docker.dir>${project.build.directory}/test-classes/integration/docker</docker.dir>
      </properties>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.6.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.java</groupId>
      <artifactId>junit-dataprovider</artifactId>
      <version>1.5.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>annotations</artifactId>
          <groupId>com.google.code.findbugs</groupId>
        </exclusion>
        <exclusion>
          <artifactId>junit-dep</artifactId>
          <groupId>junit</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <version>2.5.5</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <properties>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
</project>

